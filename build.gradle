buildscript {

    ext.embedMongoVersion = '2.2.0'
    ext.embedRedisVersion = '0.7.2'
    ext.h2Version = '1.4.199'
    ext.kotlinVersion = '1.2.71'
//    ext.kotlinVersion = '1.3.41'
    ext.mapstructVersion = '1.3.0.Final'
    ext.springBootVersion = '2.1.6.RELEASE'
    ext.springCloudVersion = 'Greenwich.RELEASE'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }


}

group 'it.barusu'
version '1.0.0-SNAPSHOT'

allprojects {
    version '1.0.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        jcenter()
    }
}

subprojects {

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-allopen'
    apply plugin: 'kotlin-noarg'
    apply plugin: 'kotlin-spring'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'io.spring.dependency-management'

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
        }
    }

    configurations {
        all*.exclude module: 'spring-boot-starter-tomcat'
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk7'
        compile 'org.jetbrains.kotlin:kotlin-stdlib'
        compile 'org.jetbrains.kotlin:kotlin-stdlib-common'
        compile 'org.jetbrains.kotlin:kotlin-reflect'
        testCompile 'org.junit.jupiter:junit-jupiter-engine'
        testCompile 'org.junit.platform:junit-platform-runner'
        testCompile 'org.assertj:assertj-core'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }

        dependencies {
            dependency "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embedMongoVersion}"
            dependency "com.h2database:h2:${h2Version}"
            dependency "it.ozimov:embedded-redis:${embedRedisVersion}"
            dependency "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
            dependency "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        }

    }

    test {
        useJUnitPlatform()
        reports.html.enabled = false
    }

}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn subprojects*.test
}


